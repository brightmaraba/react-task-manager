{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","index","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTasks","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a3473db2.chunk.js","sourcesContent":["import propTypes from 'prop-types'\n\nconst Button = ({ color, text, onClick}) => {\n    return (\n        <button\n            onClick={onClick}\n            style={{backgroundColor: color}} className='btn'>\n            {text}\n        </button>\n    )\n}\n\nButton.defaultProps = {\n    color: 'steelblue'\n}\n\nButton.propTypes = {\n    text: propTypes.string,\n    color: propTypes.string,\n    onClick: propTypes.func\n}\n\nexport default Button","import PropTypes from 'prop-types'\nimport Button from './Button'\n\n\nconst Header = ({title, onAdd, showAdd}) => {\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAdd} />\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: \"Brian's Task Manager\",\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\n// CSS in JS\n// const headlingStyle = {\n//    color: 'red',\n//    backgroundColor: 'black',\n//}\n\nexport default Header\n","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ( {task, onDelete, onToggle}) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder' : ' '}`} onDoubleClick={() => onToggle(task.id)}>\n        <h3>\n            {task.text} {' '}\n            <FaTimes\n            style={{ color: 'red', cursor: 'pointer' }}\n            onClick={() => onDelete(task.id)}\n            />\n        </h3>\n        <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({ tasks, onDelete, onToggle}) => {\n    return (\n        <>\n            {tasks.map((task, index) => (\n            <Task key={index} task={task} onDelete={onDelete} onToggle={onToggle} />\n            ))}\n        </>\n    )\n}\n\nexport default Tasks","import {useState} from 'react'\n\nconst AddTask = ({onAdd}) => {\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        if (!text) {\n            alert('Please add a task')\n            return\n        }\n\n        onAdd({ text, day, reminder})\n\n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type='text' placeholder='Add Task' value={text} onChange={(e) => setText(e.target.value)} />\n            </div>\n            <div className='form-control'>\n                <label>Day & Time</label>\n                <input type='text' placeholder='Add Day and Time' value={day} onChange={(e) => setDay(e.target.value)}/>\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input type='checkbox' checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}/>\n            </div>\n\n            <input type='submit' value='Save Task' className='btn btn-block' />\n\n        </form>\n    )\n}\n\nexport default AddTask\n","import Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\nimport { useState } from 'react'\n\n\nfunction App() {\n  const [showAddTask, setShowAddTasks] = useState (false)\n\n  const [tasks, setTasks] = useState ([\n    {\n        id: 1,\n        text: 'Doctors Appointment',\n        day: 'Feb 5th at 2:30pm',\n        reminder: true,\n    },\n    {\n        id: 2,\n        text: 'Meeting at School',\n        day: 'Feb 6th at 1:30pm',\n        reminder: true,\n    },\n    {\n        id: 3,\n        text: 'Food Shopping',\n        day: 'Feb 5th at 2:30pm',\n        reminder: false,\n    },\n])\n\n//Add Task\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 10000) + 1\n  const newTask = {id, ...task}\n  setTasks([...tasks, newTask])\n}\n\n// Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !==id))\n  }\n\n  // Toggle  Reminder\n\nconst toggleReminder = (id) => {\n  setTasks(tasks.map((task) => task.id === id ? {...task, reminder: !task.reminder} : task))\n}\n\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTasks(!showAddTask)} showAdd={showAddTask} />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n        ) : (\n          'No Tasks To Show'\n          )}\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}